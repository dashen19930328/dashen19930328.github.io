---
layout:     post
title:      "静态类型与实际类型"
subtitle:   "对象类型"
date:       2016-08-15
author:     "Mr.baicai"
header-img: "img/header-post/2016-03-20-01.jpg"
tags:
    - Java编程
---

> 版权声明：本文为博主原创文章，未经博主允许不得转载。

以前实例化一个对象，好像并没有想那么多,就是觉得用什么类实例化，对象类型就应该会是什么类型吧，现在看来是没有深入进去吧。

# 1.静态类型

##  1.1 概念

静态类型是指声明对象时对象的类型，比如Father example  = new Son();其中Son单继承于Father，这个Father就是静态类型，而Son就是实际类型。

##  1.2 作用

 静态类型一般是在类编译阶段就知道其类型，可以在编译或者运行期间对其进行修改，而且一般对于类中的重载方法，如果重载方法传的参数是类对象example，那这个引用会导向那个重载方法呢，一般涉及静态分派，根据静态类型与参数类型，在编译阶段就能解析出方法入口信息，由分派的因素来看，这种分派是属于多分派。

#  2. 实际类型

 如上述实例化对象那个例子，Son就是对象的实际类型，而在编译期间，这个类型并不被知道，所以只有在运行期间才知道，对于继承子类重写父类中的方法，此时方法调用就是动态分配到子类的方法。

#  3.说明

个人还在学习，有不对的地方，希望广大网友指出，我也会深入学习纠正错误。
