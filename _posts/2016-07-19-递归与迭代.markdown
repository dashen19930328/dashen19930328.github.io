---
layout:     post
title:      "递归与迭代"
subtitle:   "简述递归与迭代"
date:       2016-07-19
author:     "Mr.baicai"
header-img: "img/header-post/2016-03-20-01.jpg"
tags:
    - java研究
---

> 版权声明：本文为博主原创文章，未经博主允许不得转载。

# 1.递归简述

##  1.1递归概念

先来说说递归，将问题划分为更小的子问题，利用程序函数或过程来调用自身的方法。

##  1.2构成条件
* （1）子问题需要和原始问题结构一样，或者更简单。
* （2）子问题调用会有一个终结条件产生。

##  1.3应用实例

斐波那契数列的求第n个数，斐波那契数列：1,2,3,5,8,13,21,35..............

```

int[] Fib//初始化一个斐波那契数列数组
public int getNums(n){

       //终结条件
    if(n==0){
        
         return 1;
   }
   if(n==1){
      return 2;
  }
  int result = getNums[n-1]+getNums[n-2]; //递归方程式，不断的调用函数自身方法，直到终结
  
  return result;
}

```

##  1.4递归用于解决问题
* （1）数据定义按递归定义
* （2）问题解法按递归算法实现
* （3）数据结构按递归定义

##  1.5递归效率

 因为递归中存在大量重复计算，所以效率较低，建议若不是必须，不要使用。
 
#   2.迭代简述

##  2.1 概念
 
 重复利用旧值得到新值，使得新值接近所需的结果，一般用于循环体或者代码片段

 
## 2.2 使用
 
 一般有重复的反馈活动，如数组求和
 
## 2.3 使用实例：数组求和
 
```

//定义一个数组int  num[n],定义一个变量int sum = 0
for(int i=0;i<n;i++){
 
    sum+=num[i];//利用前面算得的值算出新值，最终得出结果
}

```

# 2.4 用于解决问题
* （1）算法设计
* （2）数学方程求解等

##  2.5效率

迭代效率相对递归高，但容易出现使用不当导致递归失败等

# 3.个人学习

##  3.1深入学习

有错误会及时更正和深入研究补充
