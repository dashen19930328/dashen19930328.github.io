---
layout:     post
title:      "折半查找"
subtitle:   "折半查找之取中值"
date:       2016-07-19
author:     "Mr.baicai"
header-img: "img/header-post/2016-03-20-01.jpg"
tags:
    - 算法
---

> 版权声明：本文为博主原创文章，未经博主允许不得转载。

# 起因

mid = (low+high)/2, mid = low+(high-low)/2区别引发的思考，mid,low.high均为integer类型

# 1.折半查找

折半查找也是基于一个有序表进行，如果遍历对比查找，就做了很多无用功，所以在此基础上，前辈提出了折半查找，取中值，这个中值不但起到了哨兵的作用，还起到了将数据瞬间减了一半的效果，数据量不大时还不以为然，可是数据量大了后，明显可以感觉效率高一些，虽然时间复杂度也是O（n^2）。

# 2.Integer等基本数据类型限制

无论是32位还是64位机，Integer总会有个MAX_VALUE，在查找过程中取中值，容易导致溢出，从而导致程序运行出错，而且这种细微之处的错误真的不好排查，希望大家能在中值取法上做一些思考和处理，我这是碰了个坑。

# 3.扩展至算法优化 

相对于双层for循环的遍历查找对比，折半查找明显高效了不少，但是细细想想好像还是做了很多无用的工作，而且前提是必须有序，现实生活中大部分数据都是无序，所以如果就算法本身，可以在取中值进行处理或者取3等分值等等，如果数据无序，折半查找还是否适用，如果适用，中值应该怎样处理。

# 4.思考

 编程还是需要尽量规范化，毕竟机器还没有那么智能化，这种细小的错误编译可能没有错误，但是运行执行结果就会出错，所以请多思考。
